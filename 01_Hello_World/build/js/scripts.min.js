function getMessage(e){switch(e){case 5:return messageArray[0];case 4:return messageArray[1];case 3:return messageArray[2];case 2:return messageArray[3];case 1:return messageArray[4];case 0:return messageArray[5];default:console.log("invalid score")}}function getScore(){for(var e=0,s=document.getElementsByClassName("question"),t=0;t<s.length;t++)for(var r=s[t].getElementsByClassName("answer-choice"),n=0;n<r.length;n++)for(var o=r[n].getElementsByTagName("label"),a=0;a<o.length;a++)for(var c=o[a].getElementsByClassName("correctAnswer"),i=0;i<c.length;i++)0!==c[a].length&&c[a].checked&&e++;return e}$(document).ready(function(){$("#start-button").click(function(){$("#questions").removeClass("hidden"),$("#start-button").addClass("hidden")}),$("#questions").submit(function(){event.preventDefault();var e=getScore();$("#userScore").html(e),$("#scoreDescription").html(getMessage(e)),$("#questions").addClass("hidden"),$("#scoreScreen").removeClass("hidden")}),$("#tryAgain").click(function(){document.getElementById("questions").reset(),$("#scoreScreen").addClass("hidden"),$("#questions").removeClass("hidden")})}),messageArray=["You've got good taste in music, my friend! Nice job!","Soooo close! Nice try!","You did ok! Decent try!","Ah... well, you gave it your best shot.","You must've skipped some questions, right?","Did you even answer the questions?"];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9ucy5qcyJdLCJuYW1lcyI6WyJnZXRNZXNzYWdlIiwic2NvcmUiLCJtZXNzYWdlQXJyYXkiLCJjb25zb2xlIiwibG9nIiwiZ2V0U2NvcmUiLCJxdWVzdGlvbnMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpbmRleCIsImxlbmd0aCIsImFuc3dlcnMiLCJpbmRleDIiLCJsYWJlbHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImluZGV4MyIsImFuc3dlcklucHV0cyIsImluZGV4NCIsImNoZWNrZWQiLCIkIiwicmVhZHkiLCJjbGljayIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJzdWJtaXQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiaHRtbCIsImdldEVsZW1lbnRCeUlkIiwicmVzZXQiXSwibWFwcGluZ3MiOiJBQWlDQSxRQUFTQSxZQUFXQyxHQUNoQixPQUFRQSxHQUNKLElBQUssR0FDRCxNQUFPQyxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLFNBQ0lDLFFBQVFDLElBQUksa0JBTXhCLFFBQVNDLFlBR0wsSUFBSyxHQUZESixHQUFRLEVBQ1JLLEVBQVlDLFNBQVNDLHVCQUF1QixZQUN2Q0MsRUFBUSxFQUFHQSxFQUFRSCxFQUFVSSxPQUFRRCxJQUUxQyxJQUFLLEdBRERFLEdBQVVMLEVBQVVHLEdBQU9ELHVCQUF1QixpQkFDN0NJLEVBQVMsRUFBR0EsRUFBU0QsRUFBUUQsT0FBUUUsSUFFMUMsSUFBSyxHQUREQyxHQUFTRixFQUFRQyxHQUFRRSxxQkFBcUIsU0FDekNDLEVBQVMsRUFBR0EsRUFBU0YsRUFBT0gsT0FBUUssSUFFekMsSUFBSyxHQUREQyxHQUFlSCxFQUFPRSxHQUFRUCx1QkFBdUIsaUJBQ2hEUyxFQUFTLEVBQUdBLEVBQVNELEVBQWFOLE9BQVFPLElBQ1gsSUFBaENELEVBQWFELEdBQVFMLFFBQ2pCTSxFQUFhRCxHQUFRRyxTQUNyQmpCLEdBVXhCLE9BQU9BLEdBbEZYa0IsRUFBRVosVUFBVWEsTUFBTSxXQUVWRCxFQUFFLGlCQUFpQkUsTUFBTSxXQUNwQkYsRUFBRSxjQUFjRyxZQUFZLFVBQzVCSCxFQUFFLGlCQUFpQkksU0FBUyxZQUdqQ0osRUFBRSxjQUFjSyxPQUFPLFdBQ25CQyxNQUFNQyxnQkFFTixJQUFJekIsR0FBUUksVUFDWmMsR0FBRSxjQUFjUSxLQUFLMUIsR0FDckJrQixFQUFFLHFCQUFxQlEsS0FBSzNCLFdBQVdDLElBQ3ZDa0IsRUFBRSxjQUFjSSxTQUFTLFVBQ3pCSixFQUFFLGdCQUFnQkcsWUFBWSxZQUdsQ0gsRUFBRSxhQUFhRSxNQUFNLFdBQ2pCZCxTQUFTcUIsZUFBZSxhQUFhQyxRQUNyQ1YsRUFBRSxnQkFBZ0JJLFNBQVMsVUFDM0JKLEVBQUUsY0FBY0csWUFBWSxjQUl4Q3BCLGNBQ0ksdURBQ0EseUJBQ0EsMEJBQ0EsMENBQ0EsNkNBQ0EiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcclxuXHJcbiAgICAgICAgJChcIiNzdGFydC1idXR0b25cIikuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAkKFwiI3F1ZXN0aW9uc1wiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICQoXCIjc3RhcnQtYnV0dG9uXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcjcXVlc3Rpb25zJykuc3VibWl0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAvLyBDaGVjayBhbnN3ZXJzXHJcbiAgICAgICAgICAgIHZhciBzY29yZSA9IGdldFNjb3JlKCk7XHJcbiAgICAgICAgICAgICQoXCIjdXNlclNjb3JlXCIpLmh0bWwoc2NvcmUpO1xyXG4gICAgICAgICAgICAkKFwiI3Njb3JlRGVzY3JpcHRpb25cIikuaHRtbChnZXRNZXNzYWdlKHNjb3JlKSk7XHJcbiAgICAgICAgICAgICQoXCIjcXVlc3Rpb25zXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAkKFwiI3Njb3JlU2NyZWVuXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcjdHJ5QWdhaW4nKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJxdWVzdGlvbnNcIikucmVzZXQoKTsgLy8gcmVzZXQgcXVlc3Rpb25zXHJcbiAgICAgICAgICAgICQoXCIjc2NvcmVTY3JlZW5cIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICQoXCIjcXVlc3Rpb25zXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgIH0pO1xyXG59KTtcclxuXHJcbm1lc3NhZ2VBcnJheSA9IFtcclxuICAgIFwiWW91J3ZlIGdvdCBnb29kIHRhc3RlIGluIG11c2ljLCBteSBmcmllbmQhIE5pY2Ugam9iIVwiLFxyXG4gICAgXCJTb29vbyBjbG9zZSEgTmljZSB0cnkhXCIsXHJcbiAgICBcIllvdSBkaWQgb2shIERlY2VudCB0cnkhXCIsXHJcbiAgICBcIkFoLi4uIHdlbGwsIHlvdSBnYXZlIGl0IHlvdXIgYmVzdCBzaG90LlwiLFxyXG4gICAgXCJZb3UgbXVzdCd2ZSBza2lwcGVkIHNvbWUgcXVlc3Rpb25zLCByaWdodD9cIixcclxuICAgIFwiRGlkIHlvdSBldmVuIGFuc3dlciB0aGUgcXVlc3Rpb25zP1wiXHJcbl07XHJcblxyXG5mdW5jdGlvbiBnZXRNZXNzYWdlKHNjb3JlKSB7XHJcbiAgICBzd2l0Y2ggKHNjb3JlKSB7XHJcbiAgICAgICAgY2FzZSA1OlxyXG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZUFycmF5WzBdO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDQ6XHJcbiAgICAgICAgICAgIHJldHVybiBtZXNzYWdlQXJyYXlbMV07XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2VBcnJheVsyXTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZUFycmF5WzNdO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgIHJldHVybiBtZXNzYWdlQXJyYXlbNF07XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2VBcnJheVs1XTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJpbnZhbGlkIHNjb3JlXCIpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgIH1cclxufVxyXG5cclxuLy8gQ2FsY3VsYXRlcyB1c2VyIHNjb3JlIGJ5IGNoZWNraW5nIGlmIHRoZSBjb3JyZWN0IGFuc3dlciBpcyBjaGVja2VkXHJcbmZ1bmN0aW9uIGdldFNjb3JlKCkge1xyXG4gICAgdmFyIHNjb3JlID0gMDtcclxuICAgIHZhciBxdWVzdGlvbnMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwicXVlc3Rpb25cIik7XHJcbiAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgcXVlc3Rpb25zLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgIHZhciBhbnN3ZXJzID0gcXVlc3Rpb25zW2luZGV4XS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYW5zd2VyLWNob2ljZVwiKTsgLy8gbGlzdCBvZiBhbnN3ZXJzXHJcbiAgICAgICAgZm9yICh2YXIgaW5kZXgyID0gMDsgaW5kZXgyIDwgYW5zd2Vycy5sZW5ndGg7IGluZGV4MisrKSB7XHJcbiAgICAgICAgICAgIHZhciBsYWJlbHMgPSBhbnN3ZXJzW2luZGV4Ml0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJsYWJlbFwiKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaW5kZXgzID0gMDsgaW5kZXgzIDwgbGFiZWxzLmxlbmd0aDsgaW5kZXgzKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciBhbnN3ZXJJbnB1dHMgPSBsYWJlbHNbaW5kZXgzXS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjb3JyZWN0QW5zd2VyJyk7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpbmRleDQgPSAwOyBpbmRleDQgPCBhbnN3ZXJJbnB1dHMubGVuZ3RoOyBpbmRleDQrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChhbnN3ZXJJbnB1dHNbaW5kZXgzXS5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFuc3dlcklucHV0c1tpbmRleDNdLmNoZWNrZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjb3JlKys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBzY29yZTtcclxufVxyXG5cclxuXHJcbiAgICBcclxuXHJcbiJdfQ==
