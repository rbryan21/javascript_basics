function getMessage(e){switch(e){case 5:return messageArray[0];case 4:return messageArray[1];case 3:return messageArray[2];case 2:return messageArray[3];case 1:return messageArray[4];case 0:return messageArray[5];default:console.log("invalid score")}}function getScore(){for(var e=0,t=document.getElementsByClassName("question"),s=0;s<t.length;s++)for(var r=t[s].getElementsByClassName("answer-choice"),n=0;n<r.length;n++)for(var a=r[n].getElementsByTagName("label"),o=0;o<a.length;o++)for(var i=a[o].getElementsByClassName("correctAnswer"),c=0;c<i.length;c++)0!==i[o].length&&i[o].checked&&e++;return e}function setNameAttributes(){for(var e=0,t=document.getElementsByClassName("question"),s=0;s<t.length;s++){for(var r=t[s].getElementsByClassName("answer-choice"),n=0;n<r.length;n++)for(var a=r[n].getElementsByTagName("label"),o=0;o<a.length;o++){var i=a[o].getElementsByTagName("input");i[0].setAttribute("name","answerset"+e)}e++}}$(document).ready(function(){setNameAttributes(),$("#start-button").click(function(){$("#questions").removeClass("hidden"),$("#start-button").addClass("hidden")}),$("#questions").submit(function(){event.preventDefault();var e=getScore();$("#userScore").html(e),$("#scoreDescription").html(getMessage(e)),$("#questions").addClass("hidden"),$("#scoreScreen").removeClass("hidden")}),$("#tryAgain").click(function(){document.getElementById("questions").reset(),$("#scoreScreen").addClass("hidden"),$("#questions").removeClass("hidden")})}),messageArray=["You've got good taste in music, my friend! Nice job!","Soooo close! Nice try!","You did ok! Decent try!","Ah... well, you gave it your best shot.","You must've skipped some questions, right?","Did you even answer the questions?"];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9ucy5qcyJdLCJuYW1lcyI6WyJnZXRNZXNzYWdlIiwic2NvcmUiLCJtZXNzYWdlQXJyYXkiLCJjb25zb2xlIiwibG9nIiwiZ2V0U2NvcmUiLCJxdWVzdGlvbnMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpbmRleCIsImxlbmd0aCIsImFuc3dlcnMiLCJpbmRleDIiLCJsYWJlbHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImluZGV4MyIsImFuc3dlcklucHV0cyIsImluZGV4NCIsImNoZWNrZWQiLCJzZXROYW1lQXR0cmlidXRlcyIsImFuc3dlclNldENvdW50IiwiaW5wdXQiLCJzZXRBdHRyaWJ1dGUiLCIkIiwicmVhZHkiLCJjbGljayIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJzdWJtaXQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiaHRtbCIsImdldEVsZW1lbnRCeUlkIiwicmVzZXQiXSwibWFwcGluZ3MiOiJBQXVDQSxRQUFTQSxZQUFXQyxHQUNoQixPQUFRQSxHQUNKLElBQUssR0FDRCxNQUFPQyxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLEtBQUssR0FDRCxNQUFPQSxjQUFhLEVBRXhCLFNBQ0lDLFFBQVFDLElBQUksa0JBTXhCLFFBQVNDLFlBR0wsSUFBSyxHQUZESixHQUFRLEVBQ1JLLEVBQVlDLFNBQVNDLHVCQUF1QixZQUN2Q0MsRUFBUSxFQUFHQSxFQUFRSCxFQUFVSSxPQUFRRCxJQUUxQyxJQUFLLEdBRERFLEdBQVVMLEVBQVVHLEdBQU9ELHVCQUF1QixpQkFDN0NJLEVBQVMsRUFBR0EsRUFBU0QsRUFBUUQsT0FBUUUsSUFFMUMsSUFBSyxHQUREQyxHQUFTRixFQUFRQyxHQUFRRSxxQkFBcUIsU0FDekNDLEVBQVMsRUFBR0EsRUFBU0YsRUFBT0gsT0FBUUssSUFFekMsSUFBSyxHQUREQyxHQUFlSCxFQUFPRSxHQUFRUCx1QkFBdUIsaUJBQ2hEUyxFQUFTLEVBQUdBLEVBQVNELEVBQWFOLE9BQVFPLElBQ1gsSUFBaENELEVBQWFELEdBQVFMLFFBQ2pCTSxFQUFhRCxHQUFRRyxTQUNyQmpCLEdBVXhCLE9BQU9BLEdBSVgsUUFBU2tCLHFCQUdMLElBQUssR0FGREMsR0FBaUIsRUFDakJkLEVBQVlDLFNBQVNDLHVCQUF1QixZQUN2Q0MsRUFBUSxFQUFHQSxFQUFRSCxFQUFVSSxPQUFRRCxJQUFTLENBRW5ELElBQUssR0FEREUsR0FBVUwsRUFBVUcsR0FBT0QsdUJBQXVCLGlCQUM3Q0ksRUFBUyxFQUFHQSxFQUFTRCxFQUFRRCxPQUFRRSxJQUUxQyxJQUFLLEdBRERDLEdBQVNGLEVBQVFDLEdBQVFFLHFCQUFxQixTQUN6Q0MsRUFBUyxFQUFHQSxFQUFTRixFQUFPSCxPQUFRSyxJQUFVLENBQ25ELEdBQUlNLEdBQVFSLEVBQU9FLEdBQVFELHFCQUFxQixRQUNoRE8sR0FBTSxHQUFHQyxhQUFhLE9BQVEsWUFBY0YsR0FHcERBLEtBeEdSRyxFQUFFaEIsVUFBVWlCLE1BQU0sV0FHVkwsb0JBRUFJLEVBQUUsaUJBQWlCRSxNQUFNLFdBQ3BCRixFQUFFLGNBQWNHLFlBQVksVUFDNUJILEVBQUUsaUJBQWlCSSxTQUFTLFlBR2pDSixFQUFFLGNBQWNLLE9BQU8sV0FDbkJDLE1BQU1DLGdCQUVOLElBQUk3QixHQUFRSSxVQUNaa0IsR0FBRSxjQUFjUSxLQUFLOUIsR0FDckJzQixFQUFFLHFCQUFxQlEsS0FBSy9CLFdBQVdDLElBQ3ZDc0IsRUFBRSxjQUFjSSxTQUFTLFVBQ3pCSixFQUFFLGdCQUFnQkcsWUFBWSxZQUdsQ0gsRUFBRSxhQUFhRSxNQUFNLFdBQ2pCbEIsU0FBU3lCLGVBQWUsYUFBYUMsUUFDckNWLEVBQUUsZ0JBQWdCSSxTQUFTLFVBQzNCSixFQUFFLGNBQWNHLFlBQVksY0FNeEN4QixjQUNJLHVEQUNBLHlCQUNBLDBCQUNBLDBDQUNBLDZDQUNBIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XHJcblxyXG4gICAgICAgIC8vIFNldCBpbml0aWFsIHJhZGlvIGJ1dHRvbiBhbnN3ZXIgbmFtZXNcclxuICAgICAgICBzZXROYW1lQXR0cmlidXRlcygpO1xyXG5cclxuICAgICAgICAkKFwiI3N0YXJ0LWJ1dHRvblwiKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICQoXCIjcXVlc3Rpb25zXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgJChcIiNzdGFydC1idXR0b25cIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNxdWVzdGlvbnMnKS5zdWJtaXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIC8vIENoZWNrIGFuc3dlcnNcclxuICAgICAgICAgICAgdmFyIHNjb3JlID0gZ2V0U2NvcmUoKTtcclxuICAgICAgICAgICAgJChcIiN1c2VyU2NvcmVcIikuaHRtbChzY29yZSk7XHJcbiAgICAgICAgICAgICQoXCIjc2NvcmVEZXNjcmlwdGlvblwiKS5odG1sKGdldE1lc3NhZ2Uoc2NvcmUpKTtcclxuICAgICAgICAgICAgJChcIiNxdWVzdGlvbnNcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICQoXCIjc2NvcmVTY3JlZW5cIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyN0cnlBZ2FpbicpLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInF1ZXN0aW9uc1wiKS5yZXNldCgpOyAvLyByZXNldCBxdWVzdGlvbnNcclxuICAgICAgICAgICAgJChcIiNzY29yZVNjcmVlblwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgJChcIiNxdWVzdGlvbnNcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbn0pO1xyXG5cclxuLy8gQ3JlYXRlIG1lc3NhZ2VzIHRvIGRpc3BsYXkgdG8gdXNlciB1cG9uIGNvbXBsZXRpb24gKHZhcnkgYmFzZWQgb24gdGhlICMgb2YgY29ycmVjdCBhbnN3ZXJzKVxyXG5tZXNzYWdlQXJyYXkgPSBbXHJcbiAgICBcIllvdSd2ZSBnb3QgZ29vZCB0YXN0ZSBpbiBtdXNpYywgbXkgZnJpZW5kISBOaWNlIGpvYiFcIixcclxuICAgIFwiU29vb28gY2xvc2UhIE5pY2UgdHJ5IVwiLFxyXG4gICAgXCJZb3UgZGlkIG9rISBEZWNlbnQgdHJ5IVwiLFxyXG4gICAgXCJBaC4uLiB3ZWxsLCB5b3UgZ2F2ZSBpdCB5b3VyIGJlc3Qgc2hvdC5cIixcclxuICAgIFwiWW91IG11c3QndmUgc2tpcHBlZCBzb21lIHF1ZXN0aW9ucywgcmlnaHQ/XCIsXHJcbiAgICBcIkRpZCB5b3UgZXZlbiBhbnN3ZXIgdGhlIHF1ZXN0aW9ucz9cIlxyXG5dO1xyXG5cclxuLy8gUmV0dXJucyB0aGUgY29ycmVjdCBtZXNzYWdlIGZvciB0aGUgc2NvcmUgcGFzc2VkIGluXHJcbmZ1bmN0aW9uIGdldE1lc3NhZ2Uoc2NvcmUpIHtcclxuICAgIHN3aXRjaCAoc2NvcmUpIHtcclxuICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgIHJldHVybiBtZXNzYWdlQXJyYXlbMF07XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgNDpcclxuICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2VBcnJheVsxXTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZUFycmF5WzJdO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgIHJldHVybiBtZXNzYWdlQXJyYXlbM107XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2VBcnJheVs0XTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZUFycmF5WzVdO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImludmFsaWQgc2NvcmVcIik7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBDYWxjdWxhdGVzIHVzZXIgc2NvcmUgYnkgY2hlY2tpbmcgaWYgdGhlIGNvcnJlY3QgYW5zd2VyIGlzIGNoZWNrZWRcclxuZnVuY3Rpb24gZ2V0U2NvcmUoKSB7XHJcbiAgICB2YXIgc2NvcmUgPSAwO1xyXG4gICAgdmFyIHF1ZXN0aW9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJxdWVzdGlvblwiKTtcclxuICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBxdWVzdGlvbnMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgdmFyIGFuc3dlcnMgPSBxdWVzdGlvbnNbaW5kZXhdLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJhbnN3ZXItY2hvaWNlXCIpOyAvLyBsaXN0IG9mIGFuc3dlcnNcclxuICAgICAgICBmb3IgKHZhciBpbmRleDIgPSAwOyBpbmRleDIgPCBhbnN3ZXJzLmxlbmd0aDsgaW5kZXgyKyspIHtcclxuICAgICAgICAgICAgdmFyIGxhYmVscyA9IGFuc3dlcnNbaW5kZXgyXS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpbmRleDMgPSAwOyBpbmRleDMgPCBsYWJlbHMubGVuZ3RoOyBpbmRleDMrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFuc3dlcklucHV0cyA9IGxhYmVsc1tpbmRleDNdLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvcnJlY3RBbnN3ZXInKTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGluZGV4NCA9IDA7IGluZGV4NCA8IGFuc3dlcklucHV0cy5sZW5ndGg7IGluZGV4NCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFuc3dlcklucHV0c1tpbmRleDNdLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYW5zd2VySW5wdXRzW2luZGV4M10uY2hlY2tlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NvcmUrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHNjb3JlO1xyXG59XHJcblxyXG4vLyBTZXRzIGEgdW5pcXVlIG5hbWUgKHRocm91Z2ggYSBzaW1wbGUgaXRlcmF0b3IpIGZvciB0aGUgcmFkaW8gYW5zd2VyIGlucHV0cyBmb3IgZWFjaCBxdWVzdGlvblxyXG5mdW5jdGlvbiBzZXROYW1lQXR0cmlidXRlcygpIHtcclxuICAgIHZhciBhbnN3ZXJTZXRDb3VudCA9IDA7XHJcbiAgICB2YXIgcXVlc3Rpb25zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInF1ZXN0aW9uXCIpO1xyXG4gICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IHF1ZXN0aW9ucy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICB2YXIgYW5zd2VycyA9IHF1ZXN0aW9uc1tpbmRleF0uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImFuc3dlci1jaG9pY2VcIik7IC8vIGxpc3Qgb2YgYW5zd2Vyc1xyXG4gICAgICAgIGZvciAodmFyIGluZGV4MiA9IDA7IGluZGV4MiA8IGFuc3dlcnMubGVuZ3RoOyBpbmRleDIrKykge1xyXG4gICAgICAgICAgICB2YXIgbGFiZWxzID0gYW5zd2Vyc1tpbmRleDJdLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwibGFiZWxcIik7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGluZGV4MyA9IDA7IGluZGV4MyA8IGxhYmVscy5sZW5ndGg7IGluZGV4MysrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSBsYWJlbHNbaW5kZXgzXS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImlucHV0XCIpO1xyXG4gICAgICAgICAgICAgICAgaW5wdXRbMF0uc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcImFuc3dlcnNldFwiICsgYW5zd2VyU2V0Q291bnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFuc3dlclNldENvdW50Kys7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4gICAgXHJcblxyXG4iXX0=
